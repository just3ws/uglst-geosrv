#!/usr/bin/env bash

environment_id="1.9.3-turbo@uglst-geosrv"

# These are more for JRuby, which I sometimes test under.
chmod +x ${rvm_path}/hooks/after_use_jruby_opts
chmod +x $rvm_path/hooks/after_cd_bundler

if [[ -d "${rvm_path:-$HOME/.rvm}/environments" && -s "${rvm_path:-$HOME/.rvm}/environments/$environment_id" ]]
then
  \. "${rvm_path:-$HOME/.rvm}/environments/$environment_id"
  [[ -s "${rvm_path:-$HOME/.rvm}/hooks/after_use" ]] &&
    \. "${rvm_path:-$HOME/.rvm}/hooks/after_use" || true
  if [[ $- == *i* ]] # check for interactive shells
  then echo "Using: $(tput setaf 2)$GEM_HOME$(tput sgr0)" # show the user the ruby and gemset they are using in green
  else echo "Using: $GEM_HOME" # don't use colors in non-interactive shells
  fi
else
  # If the environment file has not yet been created, use the RVM CLI to select.
  rvm --create use  "$environment_id" || {
  echo "Failed to create RVM environment '${environment_id}'."
  return 1
}
fi

# Installs bundler if it's not in the gemset
if [[ -s Gemfile ]] && {
  ! builtin command -v bundle >/dev/null ||
    builtin command -v bundle | GREP_OPTIONS= \grep $rvm_path/bin/bundle >/dev/null
}
then
  printf "%b" "The rubygem 'bundler' is not installed. Installing it now.\n"
  gem install bundler
fi

# Bundle installs the gems
if [[ -s Gemfile ]] && builtin command -v bundle >/dev/null
then
  bundle install | GREP_OPTIONS= \grep -vE '^Using|Your bundle is complete'
fi
